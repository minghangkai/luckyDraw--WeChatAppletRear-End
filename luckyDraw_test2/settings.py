"""
Django settings for luckyDraw_test2 project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q^^u17qcff-ek2xr^no9b849@s%fs-er_u7z)@04&g0g-5_de_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django_crontab',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'user',
    'activity_and_prize',
    'certification',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'luckyDraw_test2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'luckyDraw_test2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',   # 数据库引擎
        'NAME': 'luckyDraw_test',  # 数据库名，先前创建的
        'USER': 'root',     # 用户名，可以自己创建用户
        'PASSWORD': '928492516@Linux.',  # 密码
        'HOST': 'localhost',  # mysql服务所在的主机ip
        'PORT': '3306',         # mysql服务端口
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
APPEND_SLASH = False

CRONJOBS = {
#第一个参数是 cron 表达式，定义定时任务的执行时间。
#第二个参数是要执行的模块和函数。
#第三个参数是执行定时脚本时日志文件的路径。
    # 定时函数输出的内容到指定文件（如果该路径或文件不存在将会自动创建）
    ('0 0 * * *', 'user.cron.create_dir_according_time', '>> /home/luckyDraw/create_dir_according_time.log'),  # 分钟 小时 号 月 周几
    ('* * * * *', 'activity_and_prize.cron.timed_draw', '>> /home/luckyDraw/timed_draw.log'),  # 分钟 小时 号 月 周几
    # ('* * * * *', 'user.cron.doprint', '>> /home/luckyDraw/do_print.log'),  # 分钟 小时 号 月 周几
}
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# python manage.py collectstatic在执行时，django默认会去查看定义在STATICFILES_DIRS里的目录，
# 以及在INSTALLED_APPS里定义了的app的static目录。如果这些目录下有文件，则把文件全部收集起来，拷贝到STATIC_ROOT目录下。

MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(BASE_DIR, "static/")
